using System.Diagnostics;
using Microsoft.AspNetCore.Mvc;
using Project4.Models;
using Project4.Services;

namespace Project4.Controllers;

public class MovieController : Controller
{
    public MovieController()
    {
    }

    // 1) MANDAR LA LISTA DE PELICULAS PARA QUE LA PUEDA PINTAR Y EN LA HOME TENGAMOS EL TOP TEN DE PELICULAS.
     // 2) VAMOS A USAR EL SERVICIO Y LA VAMOS A MANDAR EN EL MODELO PARA QUE LO REPRESENTE LA VISTA.
     // 3) VER TEMAS DE NAMESPACE (CON RESPECTO AL PROYECTO ACTUAL)
     // 4) CUANDO HAY UNA LLAMADA GET POR DEFECTO VA A ENTRAR A A ESTA ACCION.
    public IActionResult Index()
    {   
        var model = new List<Movie>(); // CREACION LISTA DE PELICULAS.
        model = MovieService.GetAll(); // VOY A LLAMAR AL SERVICIO. (DEBO IMPPORTAR EL NAME SPACE PARA QUE TE LO RENOZCA)

        return View(model); // VAMOS A PASAR A LA VISTA NUESTRO MODELO.
    }
    /*
    // DECLARAMOS UNA VARIABLE MODELO Y SE LA ESTOY ENVIANDO A LA VISTA
    // EN LA VISTA ES LO QUE VOY A ENLAZAR CON EL MODELO (INDEX)
    // <!-- EL MODELO (DE MI PAGINA/ARMANDO UN MODELO DE MI PAGINA) QUE LE ESTAMOS PASANDO A LA VISTA ES DE UNA LISTA DE PELICULAS -->
    // EN ESTE CASO EL MODELO ES UN OBJETO DE LISTA DE TIPO MOVIE. PUEDE HABER UN OBJETO CON MAS COSAS/
    // EL ENRUTADOR TE LLEVA AL CONTROLLER QUE EJECUTA LA ACCION INDEX POR DEFECTO O LA ACCION QUE HAYA DEFINIDO EN ESTE CASO INDEX (LA QUE VIENE POR DEFECTO)
    // Y ACA EN MOVIECONTROLER ESTAMOS DECLARANDO UNA VARIABLE QUE ES DEL TIPO LISTA Y ESA VARIABLE RECIBE LO QUE LE TRAE EL SERVICIO. EL SERVICIO ES UNA CLASE ESTATICA
    // QUE TIENE UN METODO SE TRAE TODOS LOS DATOS DE DONDE SEA (EN ESTE CASO UNA LISTA EN MEMORIA MOVIESERVICE.GETALL.) TE TRAE TODA LA INFORMACION, LA ALOJA EN ESTA VARIABLE
    // Y ESA VARIABLE ES LA QUE NOSOTROS DECIDIMOS MANDAR COMO MODELO DE LA PAGINA.
    // CUANDO VAS A LA PAGINA, EL MODELO ES DE ESE TIPO (VIEMS/INDEX)
    */

    /*
    MOVIE SERVICE (TENEMOS LISTA DE PELICULAS) --> LUEGO VA A LA LISTA DEL INDEX (MOVIE)
    TENGO TODO IMPLEMENTADO EN MI SERVICIO
    LA VOY A NECESITAR  EN MUCHAS PANTALLAS O SERVICIOS REFERIDOS A PELICULAS EN MUCHAS PANTALLAS, EN DISTINTAS PAGINAS.
    ENCAPSULAR VARIOS METODOS EN UN SERVICIO, QUE TIENE RESPONSABILIDAD DE MANEJAR TODO, CREAR, ELIMINAR, ECT.
    PSOBILIDAD DE REUTILIZAR EL CODIGO Y ARMANDO LA ESTRUCTURA DE DISTINTAS RESPONSABILIDADES DE CADA UNO.

    SERVICIO: ME TRAE LA INFORMACION.
    LA VISTA: ME MUESTRA
    CONTROLADOR: ADMINISTRA
    MODELO: TIENE LAS CLASES (SERVICIO PARTE DEL MODELO) O SEA EN LA CARPETA MODEL TENEMOS TODAS LAS CLASES.

    */

    public IActionResult Detail(string id) // ACCION RECIBE PARAMETRO QUE SE LLAMA ID  (  <li><a asp-action="Detail" asp-route-id="@item.Code">@item.Name</a></li> index)
    {
        var model = MovieService.Get(id); // vamos a traer esa pelicula. A traves del movieservice con metodo get que implementamos 
        //(id) y con ese codigo me devuelve el servicio con el codigo de la pelicula. ////// LLAMADA GET URL.

        return View(model); // rotorna la vista CON EL MODELO. TENEMOS QUE CREAR UNA VISTA DETAIL EN LA CARPETA MOVIE.
    }

    public IActionResult Create() // ACCION PARA CREAR UNA PELICULA (1) LA ACCION QUE NOS DIRIGE A LA VISTA DE CREATE) 
    // EN MOVIE CREAMOS UN CREATE.CSHTML
    {
        return View(); // ACCION GET
    }

    [HttpPost] // TENGO QUE HACER UNA OPCION DE CREATE POST
    public IActionResult Create(Movie movie){ // DECLARO MI ACCION / SE LLAMA IGUAL CREATE. RECIBE PARAMETRO QUE VIENE DEL FORMULARIO , QUE VA A SER DEL TIPO MOVIE.
        if(!ModelState.IsValid){ // SI NO ES VALIDO ENTRE A ESTE IF Y HACEMOS REDIRECTTOACTION CREATE (CON LLAMADA GET/REFRESCAR LA PAGINA)
            return RedirectToAction("Create");
        }

        MovieService.Add(movie); // SE ES VALIDO (AGREGAMOS)

        return RedirectToAction("Index"); // HACEMOS UN RETURN Y LO REDIRECCIONAMOS AL LISTADO DE PELICULAS. SI TODO SALIO BIEN ME VA A MOSTRAR LA PELICULA QUE ACABE DE CREAR.
    }


    public IActionResult Delete()
    {
        return View();
    }
    [HttpPost] // 
    public IActionResult Delete(string code){ 
        if(!ModelState.IsValid){ 
            return RedirectToAction("Create");
        }

        MovieService.Delete(code); 
        return RedirectToAction("Index"); 
    }












}
